---
title: "Анализ данных сетевого трафика при помощи библиотеки Arrow"
author: "KDA"
format: 
  md:
    output-file: README.md
---

## Цель

1. Изучить возможности технологии [Apache Arrow](https://arrow.apache.org/) для обработки и анализ больших данных
2. Получить навыки применения Arrow совместно с языком программирования R
3. Получить навыки анализа `метаинфомации о сетевом трафике`
4. Получить навыки применения облачных технологий хранения, подготовки и анализа данных: [Yandex Object Storage](https://yandex.cloud/ru/docs/storage/), [Rstudio Server](https://posit.co/products/open-source/rstudio-server/).


## ️Исходные данные

1.  R 4.4.1
2.  RStudio 2024.04.2+764

## ️Общий план выполнения

Используя R и среду разработки RStudio IDE, выполнить задания.

## Содержание ЛР

### Шаг 1: Настройка рабочего окружения

1.  **Установить программный пакет arrow с помощью:**

    -   интерфейса RStudio IDE

2.  **Получим данные**

```{r}
library(arrow) 
library(dplyr)
```



```{r}
path <- file.path("D:", "C practise", "datasets", "tm_data.pqt")
net_data <- read_parquet(path, as_data_frame = FALSE)
```

### Шаг 2: Выполнение заданий

1.  **Надите утечку данных из Вашей сети**

Важнейшие документы с результатами нашей исследовательской деятельности в области создания вакцин скачиваются в виде больших заархивированных дампов. Один из хостов в нашей сети используется для пересылки этой информации – он пересылает гораздо больше информации на внешние ресурсы в Интернете, чем остальные компьютеры нашей сети. Определите его IP-адрес

```{r}
net_data %>% 
  filter(grepl("^1[2-4]\\..+", src) & !grepl("^1[2-4]\\..+", dst)) %>%
  group_by(src) %>%
  summarise(traffic = sum(bytes)) %>%
  arrange(desc(traffic)) %>%
  head(1) %>%
  select(src) %>%
  knitr::kable()
```

2.  **Найдите утечку данных 2**

Другой атакующий установил автоматическую задачу в системном планировщике cron для экспорта содержимого внутренней wiki системы. Эта система генерирует большое количество трафика в нерабочие часы, больше чем остальные хосты. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из предыдущей задачи.

```{r}
# Преобразование timestamp в час
net_data <- net_data %>%
  mutate(hour = hour(as_datetime(timestamp / 1000)))
```

```{r}
traffic <- net_data %>%
  filter(grepl("^1[2-4]\\..+", src) &
           !grepl("^1[2-4]\\..+", dst) &
           src != '13.37.84.125') %>%
  group_by(hour, src) %>%
  summarise(total_bytes = sum(bytes), .groups = 'drop')

max_traffic <- traffic %>%
  arrange(hour, desc(total_bytes)) %>%
  group_by(hour) %>%
  mutate(rank = row_number()) %>%
  ungroup()

hour_with_max_stddev <- net_data %>%
  filter(grepl("^1[2-4]\\..+", src) &
           !grepl("^1[2-4]\\..+", dst))%>%
  group_by(hour) %>%
  summarise(stddev_bytes = sd(bytes), .groups = 'drop') %>%
  arrange(desc(stddev_bytes)) %>%
  slice_head(n = 1) %>%
  pull(hour)

result <- max_traffic %>%
  filter(rank == 1, hour %in% hour_with_max_stddev) %>%
  select(src) %>%
  knitr::kable()
  
```
```{r}
result %>%
  knitr::kable()
```

3.  **Надите утечку данных 3**

Еще один нарушитель собирает содержимое электронной почты и отправляет в Интернет используя порт, который обычно используется для другого типа трафика. Атакующий пересылает большое количество информации используя этот порт, которое нехарактерно для других хостов, использующих этот номер порта. Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей из предыдущих задач.

```{r}
# Шаг 1: Суммирование трафика по IP и порту
TrafficSummary <- net_data %>%
  filter(grepl("^1[2-4]\\..+", src) & !grepl("^1[2-4]\\..+", dst)) %>%
  group_by(ip_address = src, port) %>%
  summarise(total_bytes = sum(bytes), .groups = 'drop')

# Шаг 2: Вычисление среднего трафика по порту
AverageTraffic <- TrafficSummary %>%
  group_by(port) %>%
  summarise(avg_bytes = mean(total_bytes), .groups = 'drop')

# Шаг 3: Определение отклонений
result <- TrafficSummary %>%
  inner_join(AverageTraffic, by = "port") %>%
  mutate(deviation = abs(total_bytes - avg_bytes)) %>%
  filter(deviation > (2 * avg_bytes)) %>%
  arrange(port, ip_address)


```
```{r}
result %>%
  knitr::kable()
```


## ️Оценка результата

Провели анализ сетевого трафика с помощью библиотеки arrow

## ️Вывод

1.  Установлен пакет arrow
2.  Выполнены задания
3.  Составлен отчет
